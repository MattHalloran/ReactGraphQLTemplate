version: "3.9"
services:
    main:
        build: .
        container_name: main
        environment: 
            NODE_ENV: "${NODE_ENV}"
        ports:
            - '3000:3000'
            - '5000:5000'
        volumes:
            - ./:/srv/app
            - ./packages/server/public:/srv/app/packages/server/public
            - /srv/app/packages/server/private
            - /srv/app/packages/server/images
        depends_on: 
                - redis
                - db
    db:
        image: postgres:13
        container_name: postgres
        environment: 
            DB_NAME: "${DB_NAME}"
            DB_USER: "${DB_USER}"
            DB_PASSWORD: "${DB_PASSWORD}"
        volumes:
            - pgdata:/var/lib/postgresql/data
        command: ./init-db.sh
    redis:
        image: redis
        container_name: redis
        ports:
            - '6379:6379'
    nginx:
        image: nginx:1.21-alpine
        container_name: nginx
        restart: unless-stopped
        volumes:
            - ./data/nginx:/etc/nginx/conf.d
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
        ports:
            - "8080:80"
            - "4430:443"
        depends_on: 
                - main
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    certbot:
        image: certbot/certbot
        container_name: certbot
        restart: unless-stopped
        volumes:
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
        depends_on: 
                - nginx
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
volumes:
    pgdata: