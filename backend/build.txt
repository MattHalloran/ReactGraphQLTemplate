# Last update: 2020-02-11
# Enter these commands in the Digital Ocean Ubuntu droplet to set it up for use
# --------- Backend setup -----------------
# 1) Update apt
# 2) Install pip (python already included in ubuntu)
# 3) Set up git
# 4) Download backend repository
# 5) Download python dependencies
# 6) Set up Redis task queue system
# 7) Set up PostgreSQL
# 8) Set environment variables
# 9) Create assets directories
# 10) Execute database setup script
# ---------- Frontend setup ---------------
# 10) Install npm
# 11) Download frontend repository
# 12) Install npm packages
# 13) Update max listeners


# 1) Update apt
sudo apt update
sudo apt -y upgrade 

# 2) Install pip
sudo apt install -y python3-pip

# 3) Set up git
# First, install git
sudo apt install git

# 4) Download backend repository (ex url: https://github.com/MattHalloran/NLN-backend.git)
git clone <repo-url>

# 5) Download python dependencies
cd <project-name>
pip3 install -r requirements.txt

# 6 Set up Redis task queue system
# Create a directory to store the Redis files in
cd
mkdir redis
cd redis
# Install Redis
wget https://download.redis.io/releases/redis-6.0.10.tar.gz
tar xzf redis-6.0.10.tar.gz
cd redis-6.0.10
make
# Allow redis-server and redis-cli to be called from anywhere
sudo make install
# Start server (defaults to port 6379)
src/redis-server
# Download redis libraries for Python
pip3 install redis rq

# 7) Set up PostgreSQL
# Download (on Mac use "brew install postgres" instead )
sudo apt-get install postgresql postgresql-contrib
# Make sure postgres server is running
# **NOTE: To start postgres on Mac, use "brew services start postgresql"
service postgresql start
# PostgreSQL comes with a postgres user. It is recommended to use a different user. So we will create a new one with the username and password in the config file
# **NOTE: If postgres user was not created, enter "/usr/local/opt/postgres/bin/createuser -s postgres"
sudo su postgress
# On Mac, enter "psql -h localhost -d postgres"
psql
CREATE USER <USER_IN_CONFIG> WITH PASSWORD '<PASSWORD_IN_CONFIG>';
ALTER USER <USER_IN_CONFIG> WITH SUPERUSER;
\q
exit

# 8) Set environment variables
# In a Mac terminal, you can enter  'env | grep SOME_STRING' to search for environment variables
# Currently, there are 7 environment variables which need to be set
# Open environment file
sudo -H vim /etc/environment
# Add the following to the file. Do not delete any of the existing lines
NLN_SIGN_KEY="SOME_KEY"
FLASK_APP="src/routes.py"
TWILIO_ACCOUNT_SID="SOME_SID"
TWILIO_AUTH_TOKEN="SOME_TOKEN"
AFA_EMAIL_USERNAME="YOUR_EMAIL_ADDRESS"
AFA_EMAIL_FROM="SAME_AS_EMAIL_USERNAME_OR_CUSOM_STRING"
AFA_EMAIL_PASSWORD="EMAIL_API_KEY"
# To save and exit vim,
<press escape> :wq

# 9) Create assets directories
mkdir assets
mkdir assets/gallery
mkdir assets/messaging
mkdir assets/plant

# 10) Setup database and populate with default data
cd tools
python3 dbTools.py

# 11) Install npm
sudo apt install nodejs
sudo apt install npm

# 12) Download frontend repository (ex: https://github.com/MattHalloran/NLN-frontend.git)
cd
git clone <repo-url>

# 13) Install npm packages
cd <repo-directory>
npm install

# 14) Update max listeners
# npm uses a lot of listeners. Not sure exactly what they do, but the default max amount is not enough
echo fs.inotify.max_user_watches=20000 | sudo tee -a /etc/sysctl.conf
sudo sysctl -p